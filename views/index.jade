extends layout

block content
  h1= title

  :markdown

    Install and connect:
    ====================

    Include client lib from this url: /socket.io/socket.io.js

        var socket = io.connect(apiUrl);

    Basic usage:
    ============

    ## Join room:

    When joining a room you will receive an updated room object containing the latest info including current playing song

        socket.emit('join', {roomName: 'foo', user: {id: facebookId, ... }}, function(room){
          scope.room = room;
        });

    ## Add song to room:

    Make sure you have first joined the room before calling this method so the server has information about the room and your user info.

        socket.emit('addSong', {spotifyId: '1337', user: {id: facebookId, ... }});

    When you add a song, all connected clients will receive a new queue, see below.

    ## Receive updates

    Once you have joined a room you will start receiving updates when songs are added to the queue:

        socket.on('songAdded', function(queue){
          scope.room.queue = queue;
        })

    When someone joins the room:

        socket.on('userJoined', function(users){
          scope.room.users = users;
        })

    When a new song is being played:

        socket.on('nextSong', function(song){
          player.play(song);
        })


    Models
    ======

    ## Room

        roomName : String,
        users : [User],
        userSongs : {},       // dictionary with all user queued songs
        currentSong : Song,
        history : [Song],     // last 50 songs played in this room
        queue : [Song]        // a merged list of all queued songs

    ## Song

        spotifyId : *String,
        started : Date,
        position : Milliseconds,
        user : User,          // the user that added the song
        ...

    ## User

        id : *String,
        lastJoinDate : Date,
        lastPlayDate : Date,


    \* Required

  button(onclick="socket.emit('join', {roomName : 'foo', user: {id: 'Bob'}})") Bob
  button(onclick="socket.emit('join', {roomName : 'foo', user: {id: 'Alice'}})") Alice

  button(onclick="socket.emit('addSong', {spotifyId : 1337, length: 33000})") AddSong 1337
  button(onclick="socket.emit('addSong', {spotifyId : 4711, length: 33000})") AddSong 4711

